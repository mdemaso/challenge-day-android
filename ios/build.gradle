buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://dl.bintray.com/jetbrains/kotlin-native-dependencies"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-native-gradle-plugin:0.3.4"
    }
}

apply plugin: "konan"

konan.targets = ["iphone"]

konanArtifacts {
    def productsDir = new File("Frameworks").absolutePath
    def helperLibDir = getHelperlibDirPath()

    interop("libs") {
        defFile "src/main/c_interop/libs.def"

        compilerOpts "-F${productsDir}", "-F${helperLibDir}"
        linkerOpts "-F${productsDir}", "-F${helperLibDir}"

        includeDirs new File(".").getAbsolutePath()
    }

    program("app") {
        linkerOpts '-rpath', '@executable_path/Frameworks'

        linkerOpts "-F${productsDir}", "-F${helperLibDir}"

        libraries {
            artifact "libs"
        }
    }
}

String getHelperlibDirPath() {
    String workspacePath = "ChallengeDayiOS.xcworkspace"
    String scheme = "helperlib"
    String sdk = "iphoneos"

    String path = runCommandForOutput(Arrays.asList("/bin/sh", "-c",
        ("xcodebuild -scheme ${scheme} -workspace ${workspacePath} ONLY_ACTIVE_ARCH=NO -sdk ${sdk} -configuration Debug -showBuildSettings " +
        "| grep -m 1 \"TARGET_BUILD_DIR\" " +
        "| cut -d= -f2").toString()))

    project.logger.debug("XCode helperlib path: $path")

    return path
}

String runCommandForOutput(List<String> params) {
    project.logger.debug("Running command " + params);

    ProcessBuilder pb = new ProcessBuilder(params);
    Process p;
    String result = "";
    try {
        p = pb.start();
        final BufferedReader reader = new BufferedReader(new InputStreamReader(p.getInputStream()));

        StringJoiner sj = new StringJoiner(System.getProperty("line.separator"));
        reader.lines().iterator().forEachRemaining { s -> sj.add(s) };
        result = sj.toString();

        p.waitFor();
        p.destroy();
    } catch (Exception e) {
        e.printStackTrace();
    }
    return result.trim();
}